# Latest version available for download at:  http://github.com/write2david/screendoor/raw/master/Sample%20Home%20Environment%20Files/.screenrc
# Or: wget www.tinyurl.com/get-screendoor-screenrc
# Git: http://github.com/write2david/screendoor
#
#
#
# The following standard, common command are not changed by this .screenrc file:
#
# ^A c  //  create new window
#
# ^A "  //  bring up window list
#
# ^A n  //  switch to next window
# 
# ^A p  //  switch to previous window
#
# ^A ^A // switch to previous screen (toggle)
# 
# ^A escape or ^A [ //  switch to copy mode, and then:  spacebar to begin selection, cursor keys to add to selection, spacebar to end selection mode, and ^A ] or ^A :paste .  to paste
# 
# ^A ? - show the help screen!
#
# ^A k  //  kill current window and anything in it  (forceful exit)
# 
# ^A d  //  detach from session
#
# ^A t // display the current time, date, and loadavg of the machine
#
# split display    C-a S     //  One press splits the display into halves; a second press splits it into thirds, a third into fourths, and so on. 
#
#Newly spawned regions are empty; switch the input focus to one with C-a TAB and then select a window for it to display. 
#
 #   jump to next display region    C-a tab
#
#Once in the blank half, you have to set this bottom half of the screen to use one of the two earlier created sessions. To do this, press Ctrl+a, then " (shift+'). You will be presented with a list of available screen sessions, pick one using the arrow keys (be careful not to pick the one already at the top or you'll have a mirror console), and activate it by pressing Enter. Now type top and switch to the upper half by pressing again Ctrl+a TAB. You should now have a bash prompt waiting for commands in the upper half and system resources monitoring in the bottom half.
#
#    remove current region     C-a X
#    remove all regions but the current one    C-a Q
#    resize a region:   ^A -  or  ^A+   or   Ctrl-A :resize 3
#
#
#A key to *swap* the position of the current in the window list with the window to the left (or to the right).     This is much like Firefox with tabs, where you can drag tabs to the left or to the right, to move it within the list/line of tabs.
#
# setup keybindings for:  'number +1'   and   'number -1'.
#
#
# capture all input from keyboard?  screen /dev/ttyS0 19200
#
#
#
# I like the default screen keybindings, so I won't change any.
# But the following can be uncommented if desired:
#
# With these you go to the previous or next windows using Ctrl+left and Ctrl+right:
# bindkey "^[Od" prev        # change to previous window with ctrl-left
# bindkey "^[Oc" next        # change to next window with ctrl-right
#
#
# Allow for long scrolling (Ctrl-A, Esc)
  defscrollback 10000
#
#
#
#
#  UNCOMMENT ONE OF THE FOLLOWING "CAPTION" LINES, IF DESIRED
#  To learn how to write the caption codes, see the "STRING ESCAPES" section of the screen man page.
#
#
#  **List window titles & numbers along the bottom, the current one is bold turquoise.
#    Date & time on bottom-right, 20 spaces over from the right-edge.
#
#  Explanation:
#  Set the color and formatting for the non-current windows:  %{= .w}
#  Show the windows up until the current window, truncating as necessary: %-Lw
#  More truncation:  %20L>
#  Set the color and formatting for the current window: %{=b .g}
#  Show the current window's number and title, with "flags of the window" code: %n%f %t%
#  As a special case, "%{-}" restores the attributes and colors that were set before the last change was made (from man page)
#  List the windows that are numbered higher than the current window:  %+Lw
#  Date and time on the right:  %-020= %D %d %M - %c
#  caption always "%{= .w}%-Lw%20L>%{=b .c}%n%f %t%{-}%+Lw %-020= %D %d %M - %c"
#
#
#  **The same as above, WITHOUT the date and time on the right
#    (when the time changes while you are doing Ctrl-PgUp, it drops you back down to the bottom)
#    And WITH the current window in GREEN
#    Also, remove the "flags of the window" code  (%f)
  caption always "%{= .w}%-Lw%20L>%{=b .g}%n %t%{-}%+Lw"
#
#
#
#
# Just window number, and not window title:
# Unfortunately, the i"number-only" option is only shown for *current* window, since previous/subsequent windows are covered by %-Lw and %+Lw, which include the title
#   So, I asked the GNUscreen-users mailing list if there is an option besides "L" to list previous/subsequent window NUMBERS, or if the feature could be added to Gnu Screen.  Until then, the next line is not a great option.
#   caption always "%{= .w}%-Lw%20L>%{=b .g}%n{-}%+Lw"
##
#
# Fix Backspace key for when Backspace, instead of deleting to the left, produces these characters:  ^?
# From: http://www.deadlock.it/200902/fix-gnu-screen-backspace-misinterpretation/
bindkey -d ^? stuff ^H
bindkey -d ^@ stuff ^H
#
#  **Grey bar along the bottom with windows listed horizontally by title & number.
#  Hightlight the current window with blue.
#  caption always "%{kW}%?%-Lw%?%{bw}%n*%f %t%?(%u)%?%{kW}%?%+Lw%? %= %{= Wk}%110`%109`%122`%111`"
#
#
#  **Grey bar long bottom, current window number & title is only one listed in bottom-left.
#  Time is listed in bottom-right.
#  caption always "%3n %t%? @%u%?%? [%h]%?%=%c"
#
#
#
#  **The statusbar's features include:
#     -Host name at the left end. (bold if active split region)
#     -Date and time (mm-dd HH:MM) at the right end. (bold if active split region)
#     -Window numbers, status chars and names in the middle;
#        if there's not enough space, the list is abbreviated at the left and/or
#        right end in such a way that the host name, date/time and current window
#        are always visible. The current window is displayed in bold.
#  caption always '%?%F%{!b}%?%H%?%F%{-}%?|%0L=%-Lw%{!b}%50L>%n*%f %t%{-}%+Lw%-12=|%?%F%{!b}%?%m-%d %0c%?%F%{-}%?'
#
#
#  **Not sure how this one looks:
#   caption always '%{= kG}[ %{G}%H %{g}][%= %{= kw}%?%-Lw%?%{r}(%{W}%n*%f%t%?(%u)%?%{r})%{w}%?%+Lw%?%?%= %{g}][%{B} %d/%m %{W}%c %{g}]'
#
#
#
#  **Not sure how this one looks:
#   caption always '%{= kG}[ %{G}%H %{g}][%= %{=kw}%?%-Lw%?%{r}(%{W}%n*%f %t%?(%u)%?%{r})%{w}%?%+Lw%?%?%= %{g}][%{B}%Y-%m-%d %{W}%c %{g}]'
#
#
#  **Not sure how this one looks:
#   caption always "%{= wb}$USER @ %H >> %-Lw%{= r}%50>%n* %t%{-}%+Lw%< %-=<< (%c.%s)"
#
#  **Not sure how this one looks:
#   caption always "%{= kG}%H [%Y%m%d %c]: %-Lw%{= bW}%50<%n%f* %t%{-}%+Lw%>"
#
#  **This next one created by Brad Sims <tanfj@yahoo.com> 25/06/2004
#
#   Note the embeded space after the colon, I feel
#    it just looks nicer with a blank between the
#    text and console edge:
#     '%{=b}%{G} Screens: '
#
#   This prints the window listing in blue:
#     '%{b}%w'
#
#   This right-aligns what follows:
#     '%='
#
#   This displays the time (hours and minutes) in 12hr format
#   and adds an AM/PM flag, in bold green:
#     '%{G}%C%A'
#
#   This displays the day of the week:
#     '%D'
#
#   This displays the date in Mon/day/year format:
#   and again I embeded a space to give me one space
#   between the text and console edge:
#     '%M/%d/%Y '
#
#   The resultsing command give you a status line that
#       looks like this:
#    | Screens: 0* bash  <blanks zapped>         5:30PM  Fri, Jun/25/2004 |
#
#       (The pipes indicate the edges of the xterm/console).
#
# Green text, time, and date; windows in blue:
#  hardstatus alwayslastline "%{=b}%{G} Screen(s): %{b}%w %=%{kG}%C%A  %D, %M/%d/%Y "
