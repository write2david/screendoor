WELCOME TO SCREENDOOR
www.github.com/write2david/screendoor


CONTENTS

Introduction to Screen
Introduction to Screendoor
Using Screendoor
FAQ
Bugs & Feature Requests
History




==INTRODUCTION TO SCREEN==

	Using "GNU Screen" is like having multiple tabs on all your terminals (a.k.a. "command prompt" or "shell"). Additionally, each terminal/shell* running within Screen allows the user to quickly access every other terminal running within Screen.

	Using Screen, you will become accustomed to creating and destroying new shell prompts quickly on an as-needed basis.  For example, you may be working on writing a long "rsync" command and create a temporary new shell just to check the man page for information on a certain command-line option. This is especially helpful for SSH connections, where it is much quicker to generate two or three more Screen tabs (actually called Screen "windows") and switch between them than to initiate two or three other SSH connections and switch between them.  

	"GNU Screen" lets you disconnect (for example, from your SSH connection or Konsole window) and the shell/program you were using remains running on the machine (within the Screen session), ready for you to reconnect to it  -- from any machine.  Screen also features scrollback history, copy-and-paste that doesn't require a mouse, etc.


*No matter whether the terminal/shell is a:
	VT ("Virtual Terminal," -- usually accessed by Alt-F1, Alt-F2, etc.)
	SSH connection
	An xterm/Terminal/Konsole window
	An xterm/Terminal/Konsole tab	
	etc.


Official GNU Screen Project Websites:
      http://www.gnu.org/software/screen/
      http://savannah.gnu.org/projects/screen/


Wikipedia's "GNU Screen" article:  http://en.wikipedia.org/wiki/GNU_Screen


Introduction to "GNU Screen" Features, And How-to Guides: 
      From Debian:  http://www.debian-administration.org/articles/34
      From Sun Microsystems:  http://www.sun.com/bigadmin/features/articles/gnu_screen.html
      From RedHat:  http://magazine.redhat.com/2007/09/27/a-guide-to-gnu-screen/




==INTRODUCTION TO SCREENDOOR==

GNU Screen, after installing it, is not "enabled" for each terminal that is created. And simply configuring the shell to automatically run Screen when a terminal is opened is not enough to enable easy user access to the other running terminals, and will actually be problematic in several situations (such as when there is a SCP login).

	Thus, the simple role of Screendoor: to automatically create and manage a central Screen session to be used by all shells that are created (though Screendoor is smart enough not to run on SCP and non-interactive shells).  It is so nice to be able to access any type of terminal on my computer and always be placed inside a pre-existing Screen session, able to access all other active terminals.  Using Screendoor, I don't have to remember to start a Screen session for each terminal, or to attach to a previously created Screen session -- this is the role of Screendoor; I am always automatically placed inside of one central Screen session.  When I SSH into my home machine, I can then view and access the Konsole window I was using before I left home.

	When using Screendoor, the main Screen session is named "Screendoor," created by the first shell to run (usually the first login to the machine).  A new Screen window is created for each new terminal, and the windows are titled according to the date & time they were opened.

	The "Screendoor" session contains a window named "Cornerstone" simply to hold the session open ("Cornerstone" is a blank, non-writable window, showing a short notice, and is held open with a long "sleep" command).

	Screendoor is written as a BASH script and contains a fair amount of commenting throughout the source code.  It deals with Screen-related issues such as: responding to logins initiated by programs like SCP, automatically setting up the $DISPLAY variable for terminal logins that have X-Forwarding-Over-SSH enabled (including Xming), wiping dead Screen sessions, X-Windows running from within Screen with xTerms running within X-Windows, etc.
	Though written in BASH, Screendoor honors whatever default shell the user has [this feature not yet implemented], and will drop the user into their default shell after Screendoor is called.


Screendoor requires the following:
	GNU Screen 
	BASH (normally pre-installed on Unix-like computers)
	sleep (standard part of GNU "coreutils" package)


Note that Screendoor runs Screen sessions using the "multiuser" mode.  This means that if you do choose to "suid" (set user ID) /usr/bin/screen as root (usually only done to enable non-root accounts to join other multiuser screen sessions), then other users on your system will be able to connect to your Screendoor sessions.


==USING SCREENDOOR==

There are only TWO steps to begin using Screendoor:


Step #1) Put a copy of the "screendoor.sh" file into your home directory.  You have several options for this:

	a)  [Easiest way]  Run this in your terminal:  cd ~ &&  wget wwww.tinyurl.com/get-screendoor

	b)  [Manual way]   Go to the following URL in your web browser and then do File -> Save:
			http://github.com/write2david/screendoor/blob/master/screendoor.sh

	c)  [Programmer's way]   Clone, and then checkout, the Screendoor git repository from GitHub.
		See the website listed at the top of this document for the git URL.
		Tip:  Clone the git repo to a new directory, then softlink screendoor.sh (and any dot-files you want) to your home directory, and then clone/pull the repository as often as desired.



Step #2) Add the following line to the very END of your shell startup file(s):

	source ~/screendoor.sh


   For example, if BASH is your default shell, this line goes in BOTH your .bashrc AND your .bash_login files.
        Or, if using zsh, this line goes at the end of your .zshrc file.



--->  OPTIONAL:

	Use all or parts of the example "dot-files" included with Screendoor, available through the website listed at the top of this document OR via the following commands:
	
	a)  wget www.tinyurl.com/get-screendoor-screenrc    (for .screenrc)
	b)  wget www.tinyurl.com/get-screendoor-zshrc     (for .zshrc)
	c)  wget www.tinyurl.com/get-screendoor-bashrc     (for .bashrc)
	d)  wget www.tinyurl.com/get-screendoor-bash-login    (for .bash_login)



==FAQ==

Q:  When I type exit, it only closes my current window, it doesn't disconnect from my xterm, ssh, or VT terminal. Why not?

A:  When you type "exit" you are exiting your current shell.  But, remember your shell is wrapped inside of Screen, and you are actually connected to Screen rather than to your shell.  To exit from your xterm/ssh/VT terminal, type Ctrl-A d.  Or, to do it a bit more crudely, just close the window (click "X") for xterm / putty /etc.

	With either method, your screen window will be available when you log back in  (if you don't type "exit" first).


Q:  The "Cornerstone" window is blank; I don't see the silly "This window holds open the central Screendoor session" message.

A:  Switch to the "Cornestone" window and hit Ctrl-A (to enter a GNU Screen command). Then type ":fit" and press Enter.


==BUGS & FEATURE REQUESTS==

Please do send in any comments, bugs, patches, or ideas for improvement!... 


1. First, check the TODO file* to see if the bug is already listed.
	*http://github.com/write2david/screendoor/raw/master/TODO

2. If it's not already listed, send an e-mail to:  write2david [at] gmail [dot] com 




==HISTORY==

April 1, 2010 (planned): First Beta Release  

March 1, 2010 (planned):  First Alpha Release

October 9, 2009: Ryan Lynch posted a script to accomplish several of the same goals as Screendoor (http://www.mail-archive.com/screen-users@gnu.org/msg02683.html)

Early 2009:  Screendoor was begun as extended .bash_login and .bashrc files.  
