WELCOME TO SCREENDOOR

Website:  http://tech.thedesignhut.net/gnu-screen

Git: http://github.com/write2david/screendoor

Latest version available for download at:
	http://github.com/write2david/screendoor/blob/master/screendoor.sh

	Or:  www.tinyurl.com/get-screendoor   (for easy typing/wget'ing)




INTRODUCTION TO SCREEN

Using "GNU Screen" is like having multiple tabs on your terminal (a.k.a. "command-line" or "shell").  Additionally, each terminal can access each other terminal.*  "GNU Screen" lets you disconnect, for example, from your SSH connection (perhaps when using Putty) and the shell/program you were using (over SSH) remains running, within the Screen session.  Screen also features scrollback history, copy-and-paste that doesn't require a mouse, etc.

*Whether the terminal is a:
	VT ("Virtual Terminal," -- usually accessed by Alt-F1, Alt-F2, etc)
	SSH connection
	xterm/Terminal/Konsole window OR tab
	etc.


Official GNU Screen Project Websites:
      http://www.gnu.org/software/screen/
      http://savannah.gnu.org/projects/screen/


Wikipedia's "GNU Screen" article:  http://en.wikipedia.org/wiki/GNU_Screen


Introduction to GNU Screen Features, And How-to Guides: 
      From Debian:  http://www.debian-administration.org/articles/34
      From Sun Microsystems:  http://www.sun.com/bigadmin/features/articles/gnu_screen.html
      From RedHat:  http://magazine.redhat.com/2007/09/27/a-guide-to-gnu-screen/



INTRODUCTION TO SCREENDOOR

It is so nice to be able to access any type of shell on my computer and always be inside a pre-existing Screen session, able to access all other running shells.  Using Screendoor, I don't have to remember to start a Screen session for each terminal, or to attached to a previously created Screen session -- I am always automatically placed inside of one.

When using Screendoor, the main Screen session is named "Screendoor," created by the first login/shell to run.  New Screen windows are created for each new terminal, and are titled by date & time.
	The "Screendoor" session contains a window named "Cornerstone" simply to hold the session open ("Cornerstone" is a blank, non-writable window, showing a short notice, and is held open with a long "sleep" command).



USING SCREENDOOR

There are 3 steps:

1) Use the included ".screenrc" file, or merge the (uncommented) lines with your own, pre-existing .screenrc file.

2) Put "screendoor.sh" in your home directory.

3) Add a line like the following to the END of your shell startup file(s)

	. ~/screendoor.sh


   For example, if BASH is your default shell, this line goes in BOTH your .bashrc AND your .bash_login files.
        Or, if using zsh, this line goes at the end of your .zshrc file.




TIPS

Clone this git repository to a new local directory, "checkout" the latest revision ("HEAD"), and then softlink these files to your home directory:
	screendoor.sh
	Your shell-related files (.bash_login, .bashrc, or .zshrc)  -- optional
	.screenrc  (optional)



HISTORY

Screendoor was begun in early 2009.

The original .bashrc and .bash_login files (which were the ancestors of screendoor.sh) are available in this commit: db4db9f9f5310c90c1a5a55fa3e26bbf5ab65ca7

The Screendoor code contains a fair amount of comments along the way in each file.  It deals with screen-related issues for  logins that happen in situations like SCP and xMing, and if x-windows is running from within screen and then you open a xterm w/in that, etc.

Separately, Ryan Lynch worked on a script to accomplish the same goal (http://www.mail-archive.com/screen-users@gnu.org/msg02683.html)